name: kubernetes-deploy
#update
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # 2. Login en Docker Hub
      - name: Log in to OCIR
        uses: docker/login-action@v2
        with: 
          registry: us-chicago-1.ocir.io
          username: ${{ secrets.OCIR_USERNAME }} 
          password: ${{ secrets.OCIR_PASSWORD }}


      - name: Build and push Docker images
        env:
          NAMESPACE: ${{ secrets.OCIR_NAMESPACE }}
          TAG: ${{ github.sha }}
        run: |
          IMAGE=us-chicago-1.ocir.io/$NAMESPACE/springbootstore/store:$TAG
          docker build -t $IMAGE -f k8s/Dockerfile .
          docker push $IMAGE

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Update deployment image
        env:
          NAMESPACE_VAL: ${{ secrets.OCIR_NAMESPACE }}
          TAG_NAME: ${{ github.sha }}
        run: |
          IMAGE_NAME=us-chicago-1.ocir.io/$NAMESPACE_VAL/springbootstore/store:$TAG_NAME
          if kubectl get deployment store-container >/dev/null 2>&1; then
            kubectl set image deployment/store-container store-container=$IMAGE_NAME:$TAG_NAME
          else
            kubectl apply -f k8s/store-deployment.yaml
          fi
      - name: Verify rollout
        run: |
          set -e
          kubectl rollout status deployment/store-container --namespace default --timeout=120s
